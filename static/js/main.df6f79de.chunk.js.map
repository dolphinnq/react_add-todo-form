{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","todosWithUsers","userId","usersFromServer","find","App","useState","setTitle","titleError","setTitleError","titlePatternError","setTitlePatternError","selectedUserId","setSelectedUserId","selectedUserIdError","setSelectedUserIdError","posts","setPosts","pattern","action","method","onSubmit","event","preventDefault","test","newPost","Math","max","currentPosts","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df6f79de.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\n\nimport cn from 'classnames';\nimport { TodoWithUser } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { TodoWithUser } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoWithUser } from './types/Todo';\n\nconst todosWithUsers: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId) || null,\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [titlePatternError, setTitlePatternError] = useState(false);\n\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedUserIdError, setSelectedUserIdError] = useState(false);\n\n  const [posts, setPosts] = useState(todosWithUsers);\n\n  const pattern = /^[a-zA-Zа-яА-ЯґҐєЄіІїЇ0-9\\s]*$/;\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n    setTitlePatternError(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setSelectedUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setSelectedUserId(0);\n\n    setTitleError(false);\n    setSelectedUserIdError(false);\n\n    setTitlePatternError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title && !selectedUserId) {\n      setTitleError(true);\n      setSelectedUserIdError(true);\n\n      return;\n    }\n\n    if (!title) {\n      setTitleError(true);\n\n      return;\n    }\n\n    if (!pattern.test(title)) {\n      setTitlePatternError(true);\n\n      return;\n    }\n\n    if (!selectedUserId) {\n      setSelectedUserIdError(true);\n\n      return;\n    }\n\n    const newPost = {\n      id: (Math.max(...posts.map(todo => todo.id)) + 1),\n      title,\n      completed: false,\n      userId: selectedUserId,\n      user: usersFromServer.find(user => user.id === selectedUserId) || null,\n    };\n\n    setPosts(currentPosts => [...currentPosts, newPost]);\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n\n          {titleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n\n          {titlePatternError && (\n            <span className=\"error\">\n              Only ua and en letters, digits, and spaces are allowed\n            </span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUser}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {selectedUserIdError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={posts} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}